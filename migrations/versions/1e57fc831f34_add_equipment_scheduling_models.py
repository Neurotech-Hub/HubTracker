"""Add equipment scheduling models

Revision ID: 1e57fc831f34
Revises: add_activity_logs_table
Create Date: 2025-07-23 05:07:26.157568

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e57fc831f34'
down_revision = 'add_activity_logs_table'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scheduling_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('max_booking_duration_hours', sa.Float(), nullable=False),
    sa.Column('min_booking_notice_hours', sa.Float(), nullable=False),
    sa.Column('booking_advance_limit_days', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('purpose', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_blocked_dates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('blocked_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('is_annual_recurring', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment_operating_hours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('equipment_id', 'day_of_week', name='unique_equipment_day_hours')
    )
    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_schedulable', sa.Boolean(), nullable=True))
    
    # Set default value for existing records
    op.execute("UPDATE equipment SET is_schedulable = FALSE")
    
    # Make column NOT NULL
    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.alter_column('is_schedulable', nullable=False)

    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('logs_project_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('membership_supplements', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('membership_supplements_membership_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'memberships', ['membership_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('projects_client_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('projects_project_lead_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'clients', ['client_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['project_lead_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('tasks_assigned_to_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('tasks_completed_by_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('tasks_project_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['completed_by_user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['assigned_to'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('user_project_pins', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('user_project_pins_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('user_project_pins_project_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'projects', ['project_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('user_task_flags', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('user_task_flags_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('user_task_flags_task_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'tasks', ['task_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_task_flags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_task_flags_task_id_fkey'), 'tasks', ['task_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('user_task_flags_user_id_fkey'), 'users', ['user_id'], ['id'])

    with op.batch_alter_table('user_project_pins', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_project_pins_project_id_fkey'), 'projects', ['project_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('user_project_pins_user_id_fkey'), 'users', ['user_id'], ['id'])

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('tasks_project_id_fkey'), 'projects', ['project_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('tasks_completed_by_user_id_fkey'), 'users', ['completed_by_user_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('tasks_assigned_to_fkey'), 'users', ['assigned_to'], ['id'])

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('projects_project_lead_id_fkey'), 'users', ['project_lead_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('projects_client_id_fkey'), 'clients', ['client_id'], ['id'])

    with op.batch_alter_table('membership_supplements', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('membership_supplements_membership_id_fkey'), 'memberships', ['membership_id'], ['id'])

    with op.batch_alter_table('logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('logs_project_id_fkey'), 'projects', ['project_id'], ['id'])

    with op.batch_alter_table('equipment', schema=None) as batch_op:
        batch_op.drop_column('is_schedulable')

    op.drop_table('equipment_operating_hours')
    op.drop_table('equipment_blocked_dates')
    op.drop_table('equipment_appointments')
    op.drop_table('scheduling_settings')
    # ### end Alembic commands ###
