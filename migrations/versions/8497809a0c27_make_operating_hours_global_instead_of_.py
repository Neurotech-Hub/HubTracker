"""Make operating hours global instead of per-equipment

Revision ID: 8497809a0c27
Revises: 0e2d44a013dd
Create Date: 2025-07-23 05:19:17.189196

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8497809a0c27'
down_revision = '0e2d44a013dd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('equipment_operating_hours', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('unique_equipment_day_hours'), type_='unique')
        batch_op.create_unique_constraint('unique_day_hours', ['day_of_week'])
        batch_op.drop_constraint(batch_op.f('equipment_operating_hours_equipment_id_fkey'), type_='foreignkey')
        batch_op.drop_column('equipment_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('equipment_operating_hours', schema=None) as batch_op:
        batch_op.add_column(sa.Column('equipment_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('equipment_operating_hours_equipment_id_fkey'), 'equipment', ['equipment_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('unique_day_hours', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('unique_equipment_day_hours'), ['equipment_id', 'day_of_week'], postgresql_nulls_not_distinct=False)

    # ### end Alembic commands ###
